// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  // url      = "postgresql://myuser:mypassword@localhost:5432/mydatabase"
  url      = env("DATABASE_URL")
}

model User {
  user_id         Int         @id @default(autoincrement())
  username        String      @unique
  email           String?     @unique
  password        String
  phone           String?     @unique
  profile_picture String?
  user_type       String
  created_at      DateTime    @default(now())
  profile         Profile?
  workouts        Workout[]
  mealPlans       Meal_Plan[]
  subscription Subscription?
}

model Profile {
  profile_id   Int     @id @default(autoincrement())
  user_id      Int     @unique
  age          Int?
  weight       Float?
  height       Float?
  intensity    String?
  fitness_goal String?
  goal_detail  String?
  user         User    @relation(fields: [user_id], references: [user_id], onDelete: Cascade)
}

model Subscription {
  subscription_id      Int      @id @default(autoincrement())
  user_id              Int      @unique
  stripeCustomerId     String?  
  stripeSubscriptionId String?  
  subscriptionStatus   String   @default("free") // "free" ou "paid"
  created_at           DateTime @default(now())
  updated_at           DateTime @updatedAt

  user         User    @relation(fields: [user_id], references: [user_id], onDelete: Cascade)
}

model Workout {
  workout_id      Int              @id @default(autoincrement())
  user_id         Int
  name            String?          // Nom de la s√©ance (optionnel)
  date            DateTime         @default(now())
  duration        Int?             @default(0) // Duration in minutes
  calories_burned Int?             @default(0)
  details         Workout_Detail[]
  user            User             @relation(fields: [user_id], references: [user_id], onDelete: Cascade)
}

model Workout_Detail {
  detail_id        Int      @id @default(autoincrement())
  workout_id       Int
  exercise_id      Int
  sets             Int      @default(0)
  reps             Int      @default(0)
  weight           Float    @default(0)
  completed        Boolean  @default(false)
  completed_sets   Int      @default(0)
  completed_reps   Int      @default(0)
  completed_weight Float    @default(0)
  workout          Workout  @relation(fields: [workout_id], references: [workout_id], onDelete: Cascade)
  exercise         Exercise @relation(fields: [exercise_id], references: [exercise_id], onDelete: Restrict)
}

model Exercise {
  exercise_id  Int              @id @default(autoincrement())
  name         String
  description  String?
  video_url    String?
  goal_type    String          @default("GENERAL")
  details      Workout_Detail[]
  mealPlans    Meal_Plan[]

  // @@unique([name, goal_type])
}

model Meal_Plan {
  meal_plan_id Int                @id @default(autoincrement())
  user_id      Int
  date         DateTime           @default(now())
  meal_type    String
  details      Meal_Plan_Detail[]
  user         User               @relation(fields: [user_id], references: [user_id], onDelete: Cascade)
  exercise     Exercise?          @relation(fields: [exercise_id], references: [exercise_id], onDelete: SetNull)
  exercise_id  Int?
}

model Meal_Plan_Detail {
  detail_id    Int       @id @default(autoincrement())
  meal_plan_id Int
  recipe_id    Int
  servings     Int       @default(1)
  mealPlan     Meal_Plan @relation(fields: [meal_plan_id], references: [meal_plan_id], onDelete: Cascade)
  recipe       Recipe    @relation(fields: [recipe_id], references: [recipe_id], onDelete: Restrict)
}

model Recipe {
  recipe_id    Int                @id @default(autoincrement())
  title        String
  prep_time    Int                @default(0) // Time in minutes
  cook_time    Int                @default(0) // Time in minutes
  instructions String
  details      Meal_Plan_Detail[]
}
